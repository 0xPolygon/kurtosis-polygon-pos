name: docker-build

on:
  pull_request:
  push:
    branches: [main]

permissions:
  contents: read
  actions: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ startsWith(github.ref, 'refs/pull/') }}

jobs:
  pos-el-genesis-builder:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Login to docker registry
        if: ${{ inputs.docker_username && inputs.docker_token }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ inputs.docker_username }}
          password: ${{ inputs.docker_token }}

      - name: Retrieve tag from source code
        run: |
          tag=$(cat src/config/input_parser.star | grep "leovct/pos-el-genesis-builder" | sed 's/.*:\(.*\)".*/\1/')
          echo "TAG=${tag}" >> $GITHUB_ENV
          echo "TAG=$tag"

          tag_from_dockerfile=$(cat docker/pos-el-genesis-builder.Dockerfile | grep "^ARG GENESIS_CONTRACTS_TAG_OR_COMMIT_SHA" | cut -d'"' -f2)
          if [[ "${tag_from_dockerfile}" != "${tag}" ]]; then
            echo "The tag in the Dockerfile: '${tag_from_dockerfile}' does not match the tag in the source code: '${tag}'."
            exit 1
          else
            echo "The tag in the Dockerfile: '${tag_from_dockerfile}' matches the tag in the source code: '${tag}'."
          fi

      - name: Construct image name
        run: |
          image="leovct/pos-el-genesis-builder:${{ env.TAG }}"
          echo "IMAGE=${image}" >> $GITHUB_ENV
          echo "IMAGE=${image}"

      - name: Determine if image should be pushed
        run: |
          should_push=true
          if docker manifest inspect "${{ env.IMAGE }}" > /dev/null 2>&1; then
            echo "${{ env.IMAGE }} already exists in the registry."
            should_push=false
          else
            echo "${{ env.IMAGE }} does not exist in the registry."
          fi
          echo "SHOULD_PUSH=${should_push}" >> $GITHUB_ENV
          echo "SHOULD_PUSH=${should_push}"

      - name: Build docker image
        if: ${{ env.SHOULD_PUSH == 'true' }}
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: docker
          file: docker/pos-el-genesis-builder.Dockerfile
          tags: ${{ env.IMAGE }}
          push: true

  pos-validator-config-generator:
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - uses: actions/checkout@v4

      - name: Login to docker registry
        if: ${{ inputs.docker_username && inputs.docker_token }}
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3.4.0
        with:
          username: ${{ inputs.docker_username }}
          password: ${{ inputs.docker_token }}

      - name: Retrieve tag from source code
        run: |
          tag=$(cat src/config/input_parser.star | grep "leovct/pos-validator-config-generator" | sed 's/.*:\(.*\)".*/\1/')
          heimdall_tag=$(echo "${tag}" | cut -d'-' -f1)
          heimdall_v2_tag=$(echo "${tag}" | cut -d'-' -f2)
          echo "TAG=${tag}" >> $GITHUB_ENV
          echo "TAG=${tag}"

          heimdall_tag_from_dockerfile=$(cat docker/pos-validator-config-generator.Dockerfile | grep "^ARG HEIMDALL_VERSION" | cut -d'"' -f2)
          if [[ "${heimdall_tag_from_dockerfile}" != "${heimdall_tag}" ]]; then
            echo "The heimdall tag in the Dockerfile: '${heimdall_tag_from_dockerfile}' does not match the tag in the source code: '${heimdall_tag}'."
            exit 1
          else
            echo "The heimdall tag in the Dockerfile: '${heimdall_tag_from_dockerfile}' matches the tag in the source code: '${heimdall_tag}'."
          fi

          heimdall_v2_tag_from_dockerfile=$(cat docker/pos-validator-config-generator.Dockerfile | grep "^ARG HEIMDALL_V2_VERSION" | cut -d'"' -f2)
          if [[ "${heimdall_v2_tag_from_dockerfile}" != "${heimdall_v2_tag}" ]]; then
            echo "The heimdall v2 tag in the Dockerfile: '${heimdall_v2_tag_from_dockerfile}' does not match the tag in the source code: '${heimdall_v2_tag}'."
            exit 1
          else
            echo "The heimdall v2 tag in the Dockerfile: '${heimdall_v2_tag_from_dockerfile}' matches the tag in the source code: '${heimdall_v2_tag}'."
          fi

      - name: Construct image name
        run: |
          image="leovct/pos-validator-config-generator:${{ env.TAG }}"
          echo "IMAGE=${image}" >> $GITHUB_ENV
          echo "IMAGE=${image}"

      - name: Determine if image should be pushed
        run: |
          should_push=true
          if docker manifest inspect "${{ env.IMAGE }}" > /dev/null 2>&1; then
            echo "${{ env.IMAGE }} already exists in the registry."
            should_push=false
          else
            echo "${{ env.IMAGE }} does not exist in the registry."
          fi
          echo "SHOULD_PUSH=${should_push}" >> $GITHUB_ENV
          echo "SHOULD_PUSH=${should_push}"

      - name: Build docker image
        if: ${{ env.SHOULD_PUSH == 'true' }}
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6.15.0
        with:
          context: docker
          file: docker/pos-validator-config-generator.Dockerfile
          tags: ${{ env.IMAGE }}
          push: true
