# Ethereum package (L1) configuration.
# https://github.com/ethpandaops/ethereum-package?tab=readme-ov-file#configuration
ethereum_package:
  # Specification of the L1 participants.
  # By default, the L1 will rely on a single validator node (lighthouse/geth).
  participants:
    - el_type: geth
      el_image: ethereum/client-go:v1.14.12
      cl_type: lighthouse
      cl_image: sigp/lighthouse:v6.0.0
      use_separate_vc: true
      vc_type: lighthouse
      vc_image: sigp/lighthouse:v6.0.0

  # L1 network parameters.
  network_params:
    # Preset for the network.
    # Minimal preset is useful for rapid testing and development.
    # It only takes 192 seconds to get to finalized epoch vs 1536 seconds with mainnet defaults.
    preset: minimal
    # Number of seconds per slot on the Beacon chain.
    seconds_per_slot: 1


# Polygon PoS package (L2) configuration.
polygon_pos_package:
  # Specification of the L2 participants.
  participants:
    - ## Execution Layer (EL) specific flags.
      # The type of EL client that should be started.
      # Valid values are: "bor", "bor-modified-for-heimdall-v2", "erigon"
      el_type: bor

      # The docker image that should be used for the EL client.
      # Leave blank to use the default image for the client type.
      # Defaults by client:
      # - bor: "0xpolygon/bor:2.0.1"
      # - bor-modified-for-heimdall-v2: "leovct/bor-modified-for-heimdall-v2:32e26a4"
      # - erigon: "erigontech/erigon:v2.61.3"
      el_image: bor:local

      # The log level string that this participant's EL client should log at.
      # Leave blank to use the default log level, info.
      # Valid values are: "error", "warn", "info", "debug", "trace"
      el_log_level: info

      ## Consensus Layer (CL) specific flags.
      # The type of CL client that should be started.
      # Valid values are: "heimdall", "heimdall-v2"
      cl_type: heimdall-v2

      # The docker image that should be used for the CL client.
      # Leave blank to use the default image for the client type.
      # Defaults by client:
      # - heimdall: "0xpolygon/heimdall:1.2.0"
      # - heimdall-v2: "0xpolygon/heimdall-v2:0.1.9"
      cl_image: heimdall-v2:local

      # The docker image that should be used for the CL's client database.
      # Leave blank to use the default image.
      # Default: "rabbitmq:4.0.6"
      cl_db_image: rabbitmq:4.0.6

      # The log level string that this participant's CL client should log at.
      # Leave blank to use the default log level, info.
      # Valid values are: "error", "warn", "info", "debug", "trace"
      cl_log_level: info

      # Wether to run this participant as a validator or an rpc.
      # Default: false (run as an rpc)
      kind: validator

      # Count of nodes to spin up for this participant.
      # Default: 1
      count: 2

      # Enable node participate on witness protocol.
      enable_witness: true

    - el_type: bor
      cl_type: heimdall-v2
      cl_image: heimdall-v2:local
      kind: rpc
      el_image: bor:local
      el_log_level: info
      enable_witness: true
      sync_with_witness: false
      count: 2
    - el_type: bor
      cl_type: heimdall-v2
      cl_image: heimdall-v2:local
      kind: rpc
      el_image: bor:local
      el_log_level: info
      enable_witness: true
      sync_with_witness: true
      count: 1
    - el_type: bor
      cl_type: heimdall-v2
      cl_image: heimdall-v2:local
      kind: rpc
      el_image: bor:local
      el_log_level: info
      enable_witness: false
      sync_with_witness: false
      count: 1
    - el_type: bor
      cl_type: heimdall-v2
      cl_image: heimdall-v2:local
      kind: stateless
      el_image: bor:local
      el_log_level: info
      count: 1

      
      
  # Images for contract deployment and configuration.
  # setup_images:
    # Image used to deploy MATIC contracts to L1.
    # Default: "leovct/pos-contract-deployer-node-20:1b16c4b"
    # contract_deployer: leovct/pos-contract-deployer-node-20:ed58f8a
    # Image used to create the L2 EL genesis file.
    # Default: "leovct/pos-el-genesis-builder:96a19dd"
    # el_genesis_builder: leovct/pos-el-genesis-builder:96a19dd
    # Image used to generate L2 CL/EL validators configurations.
    # Default: "leovct/pos-validator-config-generator:1.2.0-0.1.9"
    # validator_config_generator: leovct/pos-validator-config-generator:1.2.2-0.1.9

  # L2 network parameters.
  network_params:
    ## Validators parameters.
    # This mnemonic will be used to create keystores for CL/EL validators.
    # Note that validators accounts are prefunded to make the validator setup easier and faster.
    # Take a look at src/prelaunch_data_generator/genesis_constants/PRE_FUNDED_ACCOUNTS.md
    # Default: "sibling lend brave explain wait orbit mom alcohol disorder message grace sun"
    preregistered_validator_keys_mnemonic: sibling lend brave explain wait orbit mom alcohol disorder message grace sun
    # The amount of ether to stake for each validator.
    # Default: 10000
    validator_stake_amount_eth: 10000
    # The top up fee amount, in ether, for each validator.
    # Default: 2000
    validator_top_up_fee_amount_eth: 2000

    ## Consensus Layer parameters.
    # The CL network id.
    # Default: "heimdall-4927"
    # Note: it must be a string!
    cl_chain_id: heimdall-4927
    # The span poll interval on the CL chain.
    # Default: "0m15s"
    cl_span_poll_interval: 0m15s
    # The checkpoint pool interval on the CL chain.
    # Default: "1m0s"
    cl_checkpoint_poll_interval: 1m0s

    # cl_environment: local

    ## Execution Layer parameters.
    # The EL network id.
    # Default: "4927"
    # Note: it must be a string!
    el_chain_id: "4927"
    # The number of seconds per block on the EL chain.
    # Default: 2
    el_block_interval_seconds: 2
    # The duration of an EL sprint, measured in blocks.
    # Default: 16
    el_sprint_duration: 16
    # The duration of an EL span, measured in blocks.
    # Default: 128
    el_span_duration: 128
    # The EL gas limit.
    # Default: 10^7
    el_gas_limit: 10_000_000

  # Additional services to run in this enclave.
  # Default: []
  additional_services:
    # A blockchain explorer (will be supported soon).
    # - blockscout
    # A monitoring stack composed of Prometheus and Grafana (will be supported soon).
    - prometheus_grafana
    # A transaction spammer to send fake transactions to the network (will be supported soon).
    # - tx_spammer